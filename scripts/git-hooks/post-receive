#!/bin/bash

# Validate that the following containers are running to emit a successful deploy event.
CONTAINER_VALIDATION_TARGETS=__CONTAINER_VALIDATION_TARGETS__
REPO_NAME=__REPO_NAME__
COMPOSE_FILE=__COMPOSE_FILE__

# Install Docker Engine if not available
if ! [ -x "$(command -v docker)" ]; then
    echo 'Info: Docker was not detected and is now being installed...' >&2
    yum install -y yum-utils device-mapper-persistent-data lvm2
    yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    yum install -y docker-ce docker-ce-cli containerd.io

    systemctl enable docker
    systemctl start docker
fi

# Install docker-compose if not available
if ! [ -x "$(command -v docker-compose)" ]; then
    echo 'Info: docker-compose was not detected and is now being installed...' >&2
    sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
fi


echo "post-receive: Triggered."
cd /opt/live/$REPO_NAME

echo "post-receive: git check out…"
git --git-dir=/opt/$REPO_NAME.git --work-tree=/opt/live/$REPO_NAME checkout production-readonly -f

docker-compose -f "$COMPOSE_FILE" up -d --build
echo "post-receive: Docker containers successfully recreated."

# Wait for containers to boot up.
echo "post-receive: Validate deploy status…"
sleep 8

DEPLOY_FAILED=false

# Validate that containers are running as expected.
for container in "$CONTAINER_VALIDATION_TARGETS"
do
    if [[ -z $(docker ps -q --no-trunc | grep "$(docker-compose ps -q $container)") ]]; then
        echo "post-receive: '$container' container did not restart properly!"
        echo "post-receive: DEPLOY_FAILED"
        DEPLOY_FAILED=true
        break;
    else
        echo "post-receive: RESTARTED & VALIDATED SUCCESSFULLY: $container"
    fi
done

if [ "$DEPLOY_FAILED" = false ]
then
    echo "post-receive: DEPLOY_COMPLETED"
fi
